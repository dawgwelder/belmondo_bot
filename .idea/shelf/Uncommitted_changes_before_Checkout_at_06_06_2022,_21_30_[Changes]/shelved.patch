Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import datetime\nfrom telegram import Bot\nfrom telegram.ext import Updater, CommandHandler, MessageHandler, Filters\nimport fire\nfrom random import choice\nfrom utils import *\nfrom const import *\n\n# TODO: команда квас - прокидывает картинку бомжа в ответ\n# TODO: переписать пробу на вещественных числах из нормального распределения\n# TODO: дебажить завод\n\n\nZAVOD_CHECK = False\ndt = None\nzavod_text = \"\"\n\n\ndef quote(update, context) -> None:\n    text = quote_choice()\n    context.bot.send_message(chat_id=update.effective_chat.id,\n                             text=text)\n\n\ndef answer_message(update, context) -> None:\n    text = None\n    prob = 0\n    msg = clean_string(update.message.text.lower())\n\n    if check_is_in(msg, josko_conditions):\n        text = choice(JOSKO)\n        prob = roll_probability()\n    elif check_is_in(msg, pizdec_ebok):\n        text = choice(PIZDEC)\n        prob = roll_probability(.6969)\n    elif \"жя\" in msg:\n        text = \"Тось, иди нахуй.\"\n        prob = 1\n    elif \"кря\" in msg:\n        text = \"Кря!\"\n        prob = roll_probability(.789)\n    elif \"нет\" in msg:\n        text = \"Пидора ответ!\"\n        if msg == \"нет\":\n            prob = roll_probability()\n        else:\n            prob = roll_probability(.9)\n    elif \"да\" in msg:\n        text = \"Пизда!\"\n        if msg == \"да\":\n            prob = roll_probability()\n        else:\n            prob = roll_probability(.911)\n    elif check_is_in(msg, scene_msg):\n        text = choice(movie_here)\n        prob = 1\n    elif check_is_in(msg, betrayal):\n        text = \"в кинетическую спину потенциального друга!\"\n        prob = 1\n    elif \"бельморда\" in msg:\n        text = choice(fuck_you)\n        prob = 1\n    elif \"\uD83D\uDC0C\" == msg:\n        text = choice(snail)\n        prob = roll_probability(.499)\n    elif check_is_in(msg, belmondo_hi):\n        text = choice(profi_here)\n        prob = 1\n    elif \"ну давай\" in msg:\n        text = \"аа ню давай!\"\n        prob = roll_probability(.75)\n    elif \"а?\" == msg or \"а\" == msg:\n        text = \"A?\"\n        prob = roll_probability(.51488)\n    elif \"чича\" in msg:\n        text = \"Лучший!\"\n        prob = roll_probability(.35)\n    elif \"пиздеть\" in msg:\n        text = \"кто ПИЗДЕЛ?!\"\n        prob = roll_probability(.35)\n    elif \"индидей\" in msg:\n        text = \"Индидейка, чувак. Индидейка!\"\n        prob = roll_probability(.35)\n    elif check_is_in(msg, balabama):\n        text = choice(balabama_here)\n        prob = roll_probability(.35)\n    # send sticker\n    elif \"любителям синтетики\" in msg:\n        with open(\"GM.webp\", \"rb\") as f:\n             context.bot.send_sticker(chat_id=update.effective_chat.id, sticker=f).sticker\n    if text is not None and prob:\n        context.bot.send_message(chat_id=update.effective_chat.id,\n                                 reply_to_message_id=update.message.message_id,\n                                 text=text,\n                                 parse_mode=\"markdown\")\n\n\ndef delete_message(update, context) -> None:\n    conditions = update.message.via_bot.id == SHIT_BOT_ID\n    if conditions:\n        sleep_choice(CHOICES)\n        context.bot.delete_message(update.effective_chat.id, update.message.message_id)\n\n\ndef delete_dice(update, context) -> None:\n    if update.message.dice.emoji in emojis:\n        sleep_choice(CHOICES)\n        context.bot.delete_message(update.effective_chat.id,\n                                   update.message.message_id)\n\n\ndef send_morning_sticker(update, context) -> None:\n    global ZAVOD_CHECK\n    global dt\n    global zavod_text\n\n    # text = \"Русские, в офис / на завод!\\n\" \\\n    #        \"...loading...\"\n    context.bot.send_message(chat_id=update.effective_chat.id,\n                             reply_to_message_id=update.message.message_id,\n                             text=text,\n                             )  # parse_mode=\"markdown\"\n    # username = update.effective_user.username\n    # if dt is None:\n    #     dt = datetime.datetime.now()\n    #     ZAVOD_CHECK = True\n    # else:\n    #     ZAVOD_CHECK = (datetime.datetime.now() - dt).days > 0\n    # if ZAVOD_CHECK:\n    #     zavod_text = f\"Офисчанин/Заводчанин дня - @{username}!\"\n    #     context.bot.send_message(chat_id=update.effective_chat.id,\n    #                              text=zavod_text)\n    #     with open(\"GM.webp\", \"rb\") as f:\n    #         context.bot.send_sticker(chat_id=update.effective_chat.id, sticker=f).sticker\n    #\n    # else:\n    #     text = \"Поздно, другалёчек!\\n\" + zavod_text.strip(\"@\")\n    #     context.bot.send_message(chat_id=update.effective_chat.id,\n    #                              text=text)\n\n\ndef roll_dice(update, context) -> None:\n    context.bot.send_dice(chat_id=update.effective_message.chat_id,\n                          reply_to_message_id=update.message.message_id)\n\n\ndef main(mode: str = \"dev\") -> None:\n    if mode == \"dev\" or mode is None:\n        bot = Bot(DEV_TOKEN)\n        updater = Updater(token=DEV_TOKEN, use_context=True)\n    elif mode == \"prod\":\n        bot = Bot(TOKEN)\n        updater = Updater(token=TOKEN, use_context=True)\n    else:\n        print(\"Да ты охуел, пидор\")\n    dispatcher = updater.dispatcher\n    job = updater.job_queue\n\n    quote_handler = CommandHandler(\"quote\", quote)\n    dispatcher.add_handler(quote_handler)\n\n    answer_handler = MessageHandler(Filters.text & (~Filters.command), answer_message)\n    dispatcher.add_handler(answer_handler)\n\n    delete_handler = MessageHandler(Filters.text & (~Filters.command), delete_message)\n    dispatcher.add_handler(delete_handler)\n\n    delete_dice_handler = MessageHandler(Filters.dice, delete_dice)\n    dispatcher.add_handler(delete_dice_handler)\n\n    morning_handler = CommandHandler(\"zavod\", send_morning_sticker)\n    dispatcher.add_handler(morning_handler)\n\n    roll_handler = CommandHandler(\"roll\", roll_dice)\n    dispatcher.add_handler(roll_handler)\n\n    updater.start_polling()\n\n\nif __name__ == '__main__':\n    fire.Fire(main)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 87589260d89cf9bcc80a9689921c3b2c6c4b6e6b)
+++ b/main.py	(date 1654539991347)
@@ -89,6 +89,7 @@
         with open("GM.webp", "rb") as f:
              context.bot.send_sticker(chat_id=update.effective_chat.id, sticker=f).sticker
     if text is not None and prob:
+        print(text)
         context.bot.send_message(chat_id=update.effective_chat.id,
                                  reply_to_message_id=update.message.message_id,
                                  text=text,
@@ -96,11 +97,13 @@
 
 
 def delete_message(update, context) -> None:
-    conditions = update.message.via_bot.id == SHIT_BOT_ID
-    if conditions:
+    print(update)
+    print(update.message.via_bot.id == SHIT_BOT_ID)
+    if update.message.via_bot.id == SHIT_BOT_ID:
         sleep_choice(CHOICES)
+        print('before')
         context.bot.delete_message(update.effective_chat.id, update.message.message_id)
-
+        print('after')
 
 def delete_dice(update, context) -> None:
     if update.message.dice.emoji in emojis:
